{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/constants.js","components/Profile.js","components/SerachBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","Component","window","d3_hexbin","hexbin","ShotChart","console","log","this","props","minCount","nba","stats","shots","PlayerID","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","React","CountSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","fullName","teamAbbreviation","Profile","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SerachBar","dataSource","handleSearch","searchPlayers","player","onSelect","handleSelectPlayer","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.191c7a5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React, {Component} from 'react';\r\nimport logo from \"../assets/images/nba-logoman-word-white.svg\";\r\n\r\nexport class TopNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number,\r\n        minCount: PropTypes.number,\r\n        chartType: PropTypes.string,\r\n        displayTooltip: PropTypes.bool,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"minCount\", this.props.minCount);\r\n        nba.stats.shots({\r\n            PlayerID: this.props.playerId\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n\r\n            const courtSelection = d3.select(\"#shot-chart\");\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500);\r\n            const chart_shots = shots().shotRenderThreshold(this.props.minCount).displayToolTips(this.props.displayTooltip).displayType(this.props.chartType);\r\n            courtSelection.call(chart_court);\r\n            courtSelection.datum(final_shots).call(chart_shots);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nexport class CountSlider extends React.Component {\r\n    state = {\r\n        inputValue: this.props.value\r\n    }\r\n\r\n    onChange = (value) => {\r\n        const cleanValue = Number(value) ? value: this.state.inputValue;\r\n        this.setState({\r\n            inputValue: cleanValue,\r\n        });\r\n        this.props.onCountSliderChange(cleanValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { ShotChart } from './ShotChart';\r\nimport { CountSlider } from './CountSlider';\r\nimport { Radio, Row, Col, Switch } from 'antd';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class DataViewContainer extends React.Component {\r\n    state = {\r\n        minCount: 2,\r\n        chartType: 'hexbin',\r\n        displayTooltip: true,\r\n    }\r\n\r\n    onCountSliderChange = (count) => {\r\n        this.setState({ minCount: count });\r\n    }\r\n\r\n    onChartTypeChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({ chartType: e.target.value });\r\n    }\r\n\r\n    onTooltipChange = (displayTooltip) => {\r\n        console.log(displayTooltip);\r\n        this.setState({ displayTooltip });\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart\r\n                    playerId={this.props.playerId}\r\n                    minCount={this.state.minCount}\r\n                    chartType={this.state.chartType}\r\n                    displayTooltip={this.state.displayTooltip}\r\n                />\r\n                <div className=\"filters\">\r\n                    {this.state.chartType === 'hexbin' ?\r\n                        <CountSlider value={this.state.minCount}\r\n                                     onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}/> : null}\r\n                    <br/>\r\n                    <Row>\r\n                        <Col span={9}>\r\n                            <RadioGroup onChange={this.onChartTypeChange} value={this.state.chartType}>\r\n                                <Radio value=\"hexbin\">Hexbin</Radio>\r\n                                <Radio value=\"scatter\">Scatter</Radio>\r\n                            </RadioGroup>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Switch\r\n                                checkedChildren=\"On\"\r\n                                unCheckedChildren=\"Off\"\r\n                                onChange={this.onTooltipChange}\r\n                                defaultChecked />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    playerId: 201939,\r\n    fullName: 'Stephen Curry',\r\n    teamAbbreviation: 'GSW',\r\n};","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from './constants';\r\n\r\nexport class Profile extends React.Component {\r\n    render() {\r\n        const {\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            playerName,\r\n            height,\r\n            weight,\r\n            playerId,\r\n            pts, reb, ast, pie,\r\n        } = this.props.playerInfo;\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n                <img\r\n                    className=\"profile-pic\"\r\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                    alt=\"Profile\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Team</div>\r\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n                </div>\r\n                <img\r\n                    className=\"team-logo\"\r\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                    alt=\"Team\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Height</div>\r\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Weight</div>\r\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PTS</div>\r\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">REB</div>\r\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">AST</div>\r\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PIE</div>\r\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Icon, Button, Input, AutoComplete } from 'antd';\r\nimport nba from 'nba';\r\nimport { PROFILE_PIC_URL_PREFIX } from './constants';\r\nconst Option = AutoComplete.Option;\r\n\r\nclass SerachBar extends Component {\r\n    state = {\r\n        dataSource: [],\r\n    };\r\n\r\n    handleSearch = (value) => {\r\n        console.log(\"key -word\", value);\r\n        this.setState({\r\n            dataSource: !value ?\r\n                [] : nba.searchPlayers(value).map(player => ({\r\n                    fullName: player.fullName,\r\n                    playerId: player.playerId,\r\n                }))\r\n        });\r\n    }\r\n    onSelect = (playerName) => {\r\n        this.props.handleSelectPlayer(playerName);\r\n    }\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const options = dataSource.map((player) => (\r\n            <Option key={player.fullName} value={player.fullName}          className=\"player-option\">\r\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\r\n                <span className=\"player-option-label\">{player.fullName}</span>\r\n            </Option>\r\n        ));\r\n\r\n        return (\r\n                <AutoComplete\r\n                    className=\"search-bar\"\r\n                    size=\"large\"\r\n                    dataSource={options}\r\n                    onSelect={this.onSelect}\r\n                    onSearch={this.handleSearch}\r\n                    placeholder=\"search NBA player\"\r\n                    optionLabelProp=\"text\"\r\n                >\r\n                    <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\r\n\r\n                </AutoComplete>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SerachBar;","import React from 'react';\r\nimport { DataViewContainer } from './DataViewContainer';\r\nimport nba from 'nba'\r\nimport { Profile } from './Profile';\r\nimport SerachBar from './SerachBar'\r\nimport {DEFAULT_PLAYER_INFO} from './constants'\r\n\r\nexport class Main extends React.Component {\r\n    state = {\r\n        playerInfo: DEFAULT_PLAYER_INFO\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerInfo(this.state.playerInfo.fullName);\r\n    }\r\n\r\n    loadPlayerInfo = (playerName) => {\r\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\r\n            const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n            this.setState({ playerInfo });\r\n        });\r\n    }\r\n\r\n    handleSelectPlayer = (playerName) => {\r\n        this.loadPlayerInfo(playerName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SerachBar handleSelectPlayer={this.handleSelectPlayer}/>\r\n                <div className=\"player\">\r\n                    <Profile playerInfo={this.state.playerInfo}/>\r\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { TopNavBar } from './TopNavBar';\nimport { Main } from './Main';\n\nexport class App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <TopNavBar/>\n                <Main/>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}